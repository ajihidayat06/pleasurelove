version: '3.8'

services:
  app:
    build: .
    ports:
      - "8080:8080" # Application port
      - "40000:40000" # Debugging port
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    environment:
      ENV: ${ENV}
      PORT: ${PORT}
      DB_HOST: ${DB_HOST}
      DB_PORT: ${DB_PORT}
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
      DB_NAME: ${DB_NAME}
      REDIS_HOST: ${REDIS_HOST}
      REDIS_PORT: ${REDIS_PORT}
      REDIS_PASSWORD: ${REDIS_PASSWORD}
      REDIS_DB: ${REDIS_DB}
      JWT_SECRET: ${JWT_SECRET}
      JWT_EXPIRE_HOURS: ${JWT_EXPIRE_HOURS}
      DEBUG_MODE: ${DEBUG_MODE:-false} # Default ke "false" jika tidak ditentukan
      SUPERADMIN_EMAIL: ${SUPERADMIN_EMAIL}
      SUPERADMIN_PASSWORD: ${SUPERADMIN_PASSWORD}
    volumes:
      - ./migrations:/app/migrations
    command: >
      sh -c "
      if [ \"$DEBUG_MODE\" = \"true\" ]; then
        echo 'Running in debug mode...';
        dlv exec ./main --headless --listen=:40000 --api-version=2 --accept-multiclient --log;
      else
        echo 'Running in normal mode...';
        ./main;
      fi"

  db:
    image: postgres:latest
    restart: always
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    ports:
      - "5432:5432"
    volumes:
      - db_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER} -d ${DB_NAME}"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7
    restart: always
    ports:
      - "6379:6379"
    command: ["redis-server"] # Hapus --requirepass jika tidak digunakan
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  db_data: